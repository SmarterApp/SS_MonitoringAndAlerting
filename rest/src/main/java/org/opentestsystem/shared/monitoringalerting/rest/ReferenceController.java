/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.shared.monitoringalerting.rest;

import javax.servlet.http.HttpServletResponse;

import org.opentestsystem.shared.monitoringalerting.gateway.DiscreteIntakeService;
import org.opentestsystem.shared.web.AbstractRestController;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.client.ClientHttpRequestFactory;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller
public class ReferenceController extends AbstractRestController {

    private static final String[] SEVERITY_LEVELS = new String[] { "ERROR", "WARN", "INFO", "DEBUG", "TRACE" };

    @Autowired(required = false)
    private ClientHttpRequestFactory clientRequestFactory;

    @Autowired
    private DiscreteIntakeService discreteIntakeService;

    @RequestMapping(value = "reference/components", method = RequestMethod.GET)
    @ResponseBody
    public String[] getLoggedComponents() {
        return this.discreteIntakeService.getDistinctComponents();
    }

    @RequestMapping(value = "reference/servers", method = RequestMethod.GET)
    @ResponseBody
    public String[] getLoggedServers() {
        return this.discreteIntakeService.getDistinctServers();
    }

    @RequestMapping(value = "reference/severity", method = RequestMethod.GET)
    @ResponseBody
    public String[] getSeverityLevels(final HttpServletResponse response) {
        response.setStatus(HttpStatus.OK.value());
        return SEVERITY_LEVELS; // NOPMD
    }

    @RequestMapping(value = "reference/alerttype", method = RequestMethod.GET)
    @ResponseBody
    public String[] getAlertTypes(final HttpServletResponse response) {
        return this.discreteIntakeService.getDistinctAlertTypes();
    }

    @RequestMapping(value = "reference/metrictype", method = RequestMethod.GET)
    @ResponseBody
    public String[] getMetricTypes(final HttpServletResponse response) {
        return this.discreteIntakeService.getDistinctMetricTypes();
    }
}
