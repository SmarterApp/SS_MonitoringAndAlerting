/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.shared.monitoringalerting.rest;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertTrue;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.junit.Test;
import org.opentestsystem.shared.monitoringalerting.domain.Alert;
import org.opentestsystem.shared.monitoringalerting.domain.MAAlternateKey;
import org.opentestsystem.shared.search.domain.SearchResponse;

@SuppressWarnings({ "PMD.ShortVariable" })
public class AlertControllerIntegrationTest extends AbstractRestEmbeddedMongoTest {

    private static final String ERR_MSG_COR = "error message correct";

    @Test
    public void postAlertTest() throws InterruptedException {
        HashMap<String, Object> params = new HashMap<String, Object>();
        params.put("alertType", "businessAlert");
        params.put("message", "FYI: your task was completed.");

        MAAlternateKey key = new MAAlternateKey();
        key.setComponent("componenet");
        key.setNode("aNode");
        key.setServer("serverName");
        params.put("alternateKey", key);

        params.put("severity", "ERROR");
        Alert awk = callPOSTRestService("/alert", params, Alert.class);
        assertNotNull("Alert should not be null", awk);
        assertEquals("Alert should be created", 1, mongoTemplate.findAll(Alert.class).size());
    }

    @Test
    public void putAlertSearchQuery() throws InterruptedException {
        Alert a = PODAM_FACTORY.manufacturePojo(Alert.class);
        a.setId(null);

        mongoTemplate.insert(a);

        HashMap<String, String> params = new HashMap<String, String>();
        params.put("alertType", a.getAlertType());
        params.put("component", a.getComponent());
        params.put("message", a.getMessage());
        params.put("severity", a.getSeverity());
        params.put("server", a.getServer());
        params.put("node", a.getNode());

        @SuppressWarnings("unchecked")
        SearchResponse<Alert> response = callGETRestService("/alert" + buildQueryString(params), SearchResponse.class);

        assertEquals("Alert created alert should be found", 1, response.getSearchResults().size());
    }

    @Test
    public void insertInvalidAlert() throws InterruptedException {
        HashMap<String, Object> params = new HashMap<String, Object>();
        Map<String, List<String>> messages = callPOSTWithBadData("/alert", params);

        assertTrue(ERR_MSG_COR, messages.get("alertType").get(0).endsWith("alert.type.required"));
        assertTrue(ERR_MSG_COR, messages.get("alternateKey.server").get(0).endsWith("server.required"));
        assertTrue(ERR_MSG_COR, messages.get("alternateKey.node").get(0).endsWith("node.required"));
        assertTrue(ERR_MSG_COR, messages.get("alternateKey.component").get(0).endsWith("component.required"));
    }

}
