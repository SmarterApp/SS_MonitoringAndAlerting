/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.shared.monitoringalerting.domain.validation;

import java.util.HashSet;
import java.util.Locale;
import java.util.Set;

import javax.validation.ConstraintViolation;
import javax.validation.Validator;
import javax.validation.groups.Default;

import org.opentestsystem.shared.monitoringalerting.domain.MAEntityBase;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.MessageSource;
import org.springframework.stereotype.Service;

/**
 * Validator service that can be used to perform JSR 303 style validation on a Registration bean.
 */
@Service
public class ValidatorService {

    @Autowired
    private Validator validator;

    @Autowired
    private MessageSource messages;

    /**
     * Method used to perform validation. Automatically looks at properties file to perform error message translation.
     * 
     * @param bean Registration
     * @return A Set of Strings
     */
    public <T extends MAEntityBase> Set<String> validate(final T bean) {
        Set<String> errorMessages = new HashSet<String>();

        Set<ConstraintViolation<T>> errors = validator.validate(bean);

        if (!errors.isEmpty()) {
            for (ConstraintViolation<T> error : errors) {
                errorMessages.add(messages.getMessage(error.getMessageTemplate(), new Object[] { }, "Could not look up message for key: " + error.getMessageTemplate(), Locale.US)); // NOPMD
            }
        }

        return errorMessages;
    }

    /**
     * Method used to perform validation. Automatically looks at properties file to perform error message translation.
     * Performs validation for the Standalone validation group as well as the default group.
     * 
     * @param bean Registration
     * @return A Set of Strings
     */
    public <T extends MAEntityBase> Set<String> validateStandalone(final T bean) {
        Set<String> errorMessages = new HashSet<String>();
        Set<ConstraintViolation<T>> errors = validator.validate(bean, StandaloneValidation.class, Default.class);
        if (!errors.isEmpty()) {
            for (ConstraintViolation<T> error : errors) {
                errorMessages.add(messages.getMessage(error.getMessageTemplate(), new Object[] { }, "Could not look up message for key: " + error.getMessageTemplate(), Locale.US)); // NOPMD
            }
        }

        return errorMessages;
    }

}
