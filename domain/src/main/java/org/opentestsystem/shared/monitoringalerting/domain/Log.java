/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.shared.monitoringalerting.domain;

import org.springframework.data.mongodb.core.index.CompoundIndex;
import org.springframework.data.mongodb.core.index.CompoundIndexes;
import org.springframework.data.mongodb.core.index.Indexed;
import org.springframework.data.mongodb.core.mapping.Document;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

/**
 * Describes a Log entry
 */
@Document
@JsonIgnoreProperties(ignoreUnknown = true)
@CompoundIndexes(value = {
        @CompoundIndex(name = "alternateKeyIdx", def = "{'alternateKey.component':1, 'alternateKey.server':1, 'alternateKey.node':1}") })
public class Log extends MABase {

    private static final long serialVersionUID = -4075989539241330532L;

    private static final String GET_RESOURCE_NAME = "/log/";

    @Indexed
    private String referenceNumber;
    private String stackTrace;

    private static final int SB_SIZE = 30;

    public String getStackTrace() {
        return stackTrace;
    }

    public void setStackTrace(final String aStackTrace) {
        this.stackTrace = aStackTrace;
    }

    public String getReferenceNumber() {
        return referenceNumber;
    }

    public void setReferenceNumber(final String aReferenceNumber) {
        this.referenceNumber = aReferenceNumber;
    }

    @Override
    public String toString() {
        StringBuilder sbuilder = new StringBuilder(SB_SIZE);
        sbuilder.append("Log: [, stackTrace = ");
        sbuilder.append(stackTrace);
        sbuilder.append("\n");
        sbuilder.append(super.toString());
        sbuilder.append(" ]\n");
        return sbuilder.toString();
    }

    @Override
    @JsonIgnore
    public String getResourceName() {
        return GET_RESOURCE_NAME;
    }
}
