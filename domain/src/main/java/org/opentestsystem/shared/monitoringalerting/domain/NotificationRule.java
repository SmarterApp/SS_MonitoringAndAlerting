/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.shared.monitoringalerting.domain;

import java.io.Serializable;
import java.util.List;

import javax.validation.constraints.NotNull;

import org.hibernate.validator.constraints.NotBlank;
import org.hibernate.validator.constraints.NotEmpty;
import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.index.CompoundIndex;
import org.springframework.data.mongodb.core.index.CompoundIndexes;
import org.springframework.data.mongodb.core.mapping.DBRef;
import org.springframework.data.mongodb.core.mapping.Document;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

/**
 * Describes a rule for when to create a notification
 */
@Document
@JsonIgnoreProperties(ignoreUnknown = true)
@CompoundIndexes(value = { @CompoundIndex(name = "notificationrule_indx", def = "{'ruleType':1, 'attribute':1, 'regex':1}", unique = true, dropDups = true) })
public class NotificationRule implements Serializable {

    private static final long serialVersionUID = -2952129194813930095L;

    private static final String GET_RESOURCE_NAME = "/notificationRule/";

    @Id
    private String id; // NOPMD

    /** Rule for alert or log. */
    @NotNull(message = "notificationRule.ruleType.required")
    private NotificationRuleType ruleType;

    /** attribute of object to inspect. */
    @NotBlank(message = "notificationRule.attribute.required")
    private String attribute;

    /** regex expression to run. */
    private String regex;

    /** is the rule active. */
    private boolean active;

    @DBRef
    @NotEmpty(message = "notificationRule.notificationGroups.required")
    private List<NotificationGroup> notificationGroups;

    public String getId() {
        return id;
    }

    public void setId(final String anId) {
        this.id = anId;
    }

    public NotificationRuleType getRuleType() {
        return ruleType;
    }

    public void setRuleType(final NotificationRuleType aRuleType) {
        this.ruleType = aRuleType;
    }

    public String getAttribute() {
        return attribute;
    }

    public void setAttribute(final String anAttribute) {
        this.attribute = anAttribute;
    }

    public String getRegex() {
        return regex;
    }

    public void setRegex(final String aRegex) {
        this.regex = aRegex;
    }

    public List<NotificationGroup> getNotificationGroups() {
        return notificationGroups;
    }

    public void setNotificationGroups(final List<NotificationGroup> notificationGroupList) {
        this.notificationGroups = notificationGroupList;
    }

    public boolean isActive() {
        return active;
    }

    public void setActive(final boolean isActive) {
        this.active = isActive;
    }

    public String getUrl() {
        return GET_RESOURCE_NAME + getId();
    }
}
