/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.shared.monitoringalerting.persistence;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.joda.time.DateTime;
import org.junit.Test;
import org.opentestsystem.shared.monitoringalerting.AbstractPersistenceEmbeddedTest;
import org.opentestsystem.shared.monitoringalerting.domain.Log;
import org.opentestsystem.shared.monitoringalerting.domain.search.LogSearchRequest;
import org.opentestsystem.shared.search.domain.SearchResponse;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;


public class LogRepositoryIntegrationTest extends AbstractPersistenceEmbeddedTest {

    @SuppressWarnings("unused")
    private static final Logger LOGGER = LoggerFactory.getLogger(LogRepositoryIntegrationTest.class);

    @Autowired
    private LogRepository logRepository;

    @Test
    public void insertLog() {

        Log log = new Log();
        log.setMessage("test message");
        log.setNode("node1");
        log.setServer("server1");
        log.setComponent("java-test:integration-test:LogRepositoryIntegrationTest");

        Log returnVal = logRepository.save(log);

        assertNotNull("id should not be null", returnVal.getId());
    }

    @Test
    public void testPaging() {

        Log log = new Log();
        log.setMessage("test message");
        log.setNode("node1");
        log.setServer("server1");
        log.setComponent("java-test:integration-test:LogRepositoryIntegrationTest");

        logRepository.save(log);

        Map<String, String[]> requestMap = new HashMap<String, String[]>(); // NOPMD
        requestMap.put("logType", new String[] { "test_log" });
        LogSearchRequest searchRequest = new LogSearchRequest(requestMap);

        SearchResponse<Log> results = logRepository.search(searchRequest);
        assertEquals("should find 1 result", 1, results.getSearchResults().size());

    }

    @Test
    public void testFindByAgeGreaterThanDays() {

        Log log = new Log();
        log.setMessage("test message");
        log.setNode("node1");
        log.setServer("server1");
        log.setComponent("java-test:integration-test:LogRepositoryIntegrationTest");
        log.setInsertTimestamp(new DateTime());
        Log returnVal = logRepository.save(log);
        
        Log log2 = new Log();
        log2.setMessage("test message");
        log2.setNode("node1");
        log2.setServer("server1");
        log2.setComponent("java-test:integration-test:LogRepositoryIntegrationTest");
        log2.setInsertTimestamp(new DateTime().minusDays(30));
        Log returnVal2 = logRepository.save(log2);        

        List<Log> allLogs = logRepository.findAll();
        List <Log> logs = logRepository.findByAgeGreaterThanDays(30);
        
        assertEquals(2, allLogs.size());
        assertEquals(1, logs.size());
    }

}
