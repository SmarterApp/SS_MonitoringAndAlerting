/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.shared.monitoringalerting.persistence;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;

import java.util.HashMap;
import java.util.Map;

import org.junit.Test;
import org.opentestsystem.shared.monitoringalerting.AbstractPersistenceEmbeddedTest;
import org.opentestsystem.shared.monitoringalerting.domain.CategoryType;
import org.opentestsystem.shared.monitoringalerting.domain.Metric;
import org.opentestsystem.shared.monitoringalerting.domain.search.MetricSearchRequest;
import org.opentestsystem.shared.search.domain.SearchResponse;
import org.springframework.beans.factory.annotation.Autowired;


public class MetricRepositoryIntegrationTest extends AbstractPersistenceEmbeddedTest {

    @Autowired
    private MetricRepository metricRepository;

    @Test
    public void insertMetric() {

        Metric metric = new Metric();
        metric.setMetricValue(2);
        metric.setMetricName("the metric");
        metric.setMetricType(CategoryType.UTILIZATION);
        metric.setMessage("test message");
        metric.setNode("node1");
        metric.setServer("server1");
        metric.setComponent("java-test:integration-test:MetricRepositoryIntegrationTest");

        Metric retMetric = metricRepository.save(metric);

        assertNotNull("id should not be null", retMetric.getId());
    }

    @Test
    public void testPaging() {

        Metric metric = new Metric();
        metric.setMetricValue(2);
        metric.setMetricName("the metric");
        metric.setMetricType(CategoryType.UTILIZATION);
        metric.setMessage("test message");
        metric.setNode("node1");
        metric.setServer("server1");
        metric.setComponent("java-test:integration-test:MetricRepositoryIntegrationTest");

        metricRepository.save(metric);

        Map<String, String[]> requestMap = new HashMap<String, String[]>(); // NOPMD
        requestMap.put("metricType", new String[] { "UTILIZATION" });
        MetricSearchRequest searchRequest = new MetricSearchRequest(requestMap);

        SearchResponse<Metric> results = metricRepository.search(searchRequest);
        assertEquals("should find 1 result", 1, results.getSearchResults().size());

    }

}
