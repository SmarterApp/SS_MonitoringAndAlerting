/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.shared.monitoringalerting.persistence;

import org.opentestsystem.shared.monitoringalerting.domain.Metric;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.mongodb.core.FindAndModifyOptions;
import org.springframework.data.mongodb.core.MongoTemplate;
import org.springframework.data.mongodb.core.query.Criteria;
import org.springframework.data.mongodb.core.query.Query;
import org.springframework.data.mongodb.core.query.Update;

public class LastCreatedMetricRepositoryImpl implements CustomLastCreatedMetricRepository {

    @Autowired
    private MongoTemplate mongoTemplate;

    @Override
    public Metric customSave(final Metric entity) {

        // mongoTemplate.insert(entity);

        Query query = new Query(Criteria.where("alternateKey.server").is(entity.getServer()).and("alternateKey.node").is(entity.getNode())
                .and("alternateKey.component").is(entity.getComponent()).and("metricName").is(entity.getMetricName()));

        Update update = new Update().set("metricValue", entity.getMetricValue()).set("insertTimestamp",
                entity.getInsertTimestamp());

        mongoTemplate.findAndModify(query, update, new FindAndModifyOptions().upsert(true), Metric.class, "lastmetric");

        return entity;
    }

    public Metric findMostRecent(final Metric search) {

        Query query = new Query(Criteria.where("alternateKey.server").is(search.getServer()).and("alternateKey.node").is(search.getNode())
                .and("alternateKey.component").is(search.getComponent()).and("metricName").is(search.getMetricName()));

        Metric ret = mongoTemplate.findOne(query, Metric.class, "lastmetric");

        return ret;
    }

}
