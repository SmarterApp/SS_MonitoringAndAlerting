/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.shared.monitoringalerting.persistence;

import java.util.List;

import org.opentestsystem.shared.monitoringalerting.domain.MetricRefresh;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.mongodb.core.MongoTemplate;
import org.springframework.data.mongodb.core.query.Criteria;
import org.springframework.data.mongodb.core.query.Query;

/**
 * Implementation of Metric Refresh custom functions
 */
public class MetricRefreshRepositoryImpl implements CustomMetricRefreshRepository {

    @Autowired
    private MongoTemplate mongoTemplate;

    /**
     * {@inheritDoc}
     */
    @Override
    public List<MetricRefresh> getUnprocessed() {

        Query query = new Query(Criteria.where("processedFlag").is("N"));

        return mongoTemplate.find(query, MetricRefresh.class);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MetricRefresh saveOnlyIfNotExists(final MetricRefresh toSave) {

        Query query = new Query(Criteria.where("alternateKey.server").is(toSave.getAlternateKey().getServer()).
                and("alternateKey.node").is(toSave.getAlternateKey().getNode()).
                and("alternateKey.component").is(toSave.getAlternateKey().getComponent()).
                and("metricName").is(toSave.getMetricName()).
                and("processedFlag").is("N"));

        MetricRefresh found = mongoTemplate.findOne(query, MetricRefresh.class);

        if (found == null) {
            mongoTemplate.save(toSave);
        }

        return toSave;
    }

}
